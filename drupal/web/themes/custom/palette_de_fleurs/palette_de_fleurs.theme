<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_html(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $variables['page_title_class'] = Html::getClass(trim($node->getTitle()));
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function palette_de_fleurs_theme_suggestions_page_alter(array &$suggestions, array $variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__'.$node->bundle();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_commerce_product__default__full(&$variables) {
  $array_tags = [];

  if (isset($variables['product_entity'])) {
    /** @var \Drupal\commerce_product\Entity\Product $product */
    $product = $variables['product_entity'];

    if ($product->get('field_fragnanced')->value) {
      $array_tags[] = $product->get('field_fragnanced')->getFieldDefinition()->getLabel();
    }

    /** @var \Drupal\taxonomy\Entity\Term $value */
    foreach ($product->get('field_type_of_flowers')->referencedEntities() as $value) {
      $array_tags[] = $value->getName();
    }

    /** @var \Drupal\taxonomy\Entity\Term $value */
    foreach ($product->get('field_characteristics')->referencedEntities() as $value) {
      $array_tags[] = $value->getName();
    }

    /** @var \Drupal\taxonomy\Entity\Term $value */
    foreach ($product->get('field_occasion')->referencedEntities() as $value) {
      $array_tags[] = $value->getName();
    }

    $field_colors = $product->get('field_colors');
    $colors_options = $field_colors->getFieldDefinition()->getFieldStorageDefinition()->
        getOptionsProvider('value', $product)->getPossibleOptions();
    foreach ($field_colors->getValue() as $field_value) {
      $array_tags[] = $colors_options[$field_value['value']];
    }

    $variables['product_tags'] = implode(', ', $array_tags);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_views_view__flowers__products(&$variables) {
  $variables['title'] = t('Our Products');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_views_view__faq__faq_list(&$variables) {
  $variables['title'] = $variables['view']->getTitle();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_page__contact__request_a_call_back(&$variables) {
  $variables['title'] = t('Request a call back');
  $variables['description'] = t('Please fill out the form and we will call you back');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_page__contact(&$variables) {
  $variables['title'] = t('Contact us');
  $variables['description'] = t('Contact us with your request or question');
}

/**
* Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_form(&$variables) {
  if ($variables['element']['#id'] == 'contact-message-request-a-call-back-form') {
    if (isset($variables['children'])) {
      $new_children = str_replace(t('Message'), t('When would you like us to call you?'), $variables['children']->jsonSerialize());
      $new_children = str_replace(t('Send message'), t('Send'), $new_children);
      $new_children = str_replace(t('Your email address'), t('E-mail'), $new_children);
      $variables['children'] = Drupal\Core\Render\Markup::create($new_children);
    }
  }
  if ($variables['element']['#id'] == 'contact-message-feedback-form') {
    if (isset($variables['children'])) {
      $new_children = str_replace(t('Message'), t('Your request or question'), $variables['children']->jsonSerialize());
      $new_children = str_replace(t('Send message'), t('Send'), $new_children);
      $new_children = str_replace(t('Your email address'), t('E-mail'), $new_children);
      $variables['children'] = Drupal\Core\Render\Markup::create($new_children);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_page__page_with_paragraphs(&$variables) {
  if (!$variables['is_front']) {
    $variables['title'] = $variables['node']->getTitle();
  }
}

/**
 * Creating checkout progress info.
 *
 * @param int $current_step
 *   Number of step.
 *
 * @return array
 *   Array of steps.
 */
function palette_de_fleurs_create_checkout_progress($current_step = 1) {
  return [
    ['step' => '1', 'title' => t('Add extras'), 'active' => ($current_step >= 1)],
    ['step' => '2', 'title' => t('Shopping cart'), 'active' => ($current_step >= 2)],
    ['step' => '3', 'title' => t('Delivery details'), 'active' => ($current_step >= 3)],
    ['step' => '4', 'title' => t('Review'), 'active' => ($current_step >= 4)],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_page__extras(&$variables) {
  $variables['title'] = t('Add extras');
  $variables['checkout_header'] = palette_de_fleurs_create_checkout_progress(1);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_page__cart(&$variables) {
  $variables['title'] = t('Shopping cart');
  $variables['checkout_header'] = palette_de_fleurs_create_checkout_progress(2);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function palette_de_fleurs_preprocess_views_view__news__news(&$variables) {
  $variables['title'] = $variables['view']->getTitle();
}
